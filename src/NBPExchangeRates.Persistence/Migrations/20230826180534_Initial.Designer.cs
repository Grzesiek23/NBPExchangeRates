// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NBPExchangeRates.Persistence.Contexts;

#nullable disable

namespace NBPExchangeRates.Persistence.Migrations
{
    [DbContext(typeof(NbpDbContext))]
    [Migration("20230826180534_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NBPExchangeRates.Domain.Entities.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("NBPExchangeRates.Domain.Entities.ExchangeRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Ask")
                        .HasColumnType("decimal(10,6)");

                    b.Property<decimal?>("Bid")
                        .HasColumnType("decimal(10,6)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("ExchangeRateSnapshotId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Mid")
                        .HasColumnType("decimal(10,6)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ExchangeRateSnapshotId");

                    b.ToTable("ExchangeRates");
                });

            modelBuilder.Entity("NBPExchangeRates.Domain.Entities.ExchangeRateSnapshot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("date");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.ToTable("ExchangeRangeSnapshots");
                });

            modelBuilder.Entity("NBPExchangeRates.Domain.Entities.ExchangeRate", b =>
                {
                    b.HasOne("NBPExchangeRates.Domain.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NBPExchangeRates.Domain.Entities.ExchangeRateSnapshot", "ExchangeRateSnapshot")
                        .WithMany("ExchangeRates")
                        .HasForeignKey("ExchangeRateSnapshotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("ExchangeRateSnapshot");
                });

            modelBuilder.Entity("NBPExchangeRates.Domain.Entities.ExchangeRateSnapshot", b =>
                {
                    b.Navigation("ExchangeRates");
                });
#pragma warning restore 612, 618
        }
    }
}
